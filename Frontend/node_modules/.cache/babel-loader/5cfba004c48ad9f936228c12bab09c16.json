{"ast":null,"code":"var _jsxFileName = \"/home/rohan/Desktop/lkrgjka/amc-iitbhu/Frontend/src/components/pages/Projects.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport '../../App.css';\nimport '../project.css'; // import projects from './data';\n\nexport default function Projects() {\n  const [projects, setProjects] = useState([{\n    title: \"\",\n    type: \"\",\n    imageUrl: \"\",\n    description: \"\",\n    longDescription: \"\",\n    userId: \"\",\n    sanitizedHtml: \"\"\n  }]);\n  useEffect(() => {\n    fetch(\"https://amc-iitbhu.herokuapp.com/projects\").then(res => {\n      if (res.ok) {\n        return res.json();\n      }\n    }).then(jsonRes => setProjects(jsonRes));\n  }, []);\n  const alltypes = [...new Set(projects.map(item => item.type))];\n  const [projecttype, setProjecttype] = useState(\"swarm\");\n  const [types, settypes] = useState(alltypes);\n\n  const filterprojects = type => {\n    setProjecttype(type);\n    console.log(alltypes);\n  };\n\n  const Types = ({\n    types,\n    filterprojects\n  }) => {\n    // console.log(types);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"btn-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }\n    }, alltypes.map((type, index) => {\n      return /*#__PURE__*/React.createElement(\"button\", {\n        key: index,\n        type: \"button\",\n        onClick: () => filterprojects(type),\n        className: projecttype === type ? \"filter-btn active\" : \"filter-btn inactive\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }\n      }, type);\n    }));\n  };\n\n  const Menu = ({\n    projects\n  }) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"project-section-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 5\n      }\n    }, projects.filter(project => project.type === projecttype).map(project => {\n      const {\n        _id,\n        title,\n        imageUrl,\n        description\n      } = project;\n      return /*#__PURE__*/React.createElement(\"article\", {\n        className: \"menu-project\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: imageUrl,\n        alt: title,\n        className: \"photo\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"project-info\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"header\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 17\n        }\n      }, title)), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"project-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 15\n        }\n      }, description), /*#__PURE__*/React.createElement(Link, {\n        to: '/' + _id,\n        id: \"ExtraBtn\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        className: \"Extra-btn\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 48\n        }\n      }, \"Read more\"))));\n    }));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"projects-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }, \"Our Projects\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"project-underline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Types, {\n    types: types,\n    filterprojects: filterprojects,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Menu, {\n    projects: projects,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/home/rohan/Desktop/lkrgjka/amc-iitbhu/Frontend/src/components/pages/Projects.js"],"names":["React","useEffect","useState","Link","Projects","projects","setProjects","title","type","imageUrl","description","longDescription","userId","sanitizedHtml","fetch","then","res","ok","json","jsonRes","alltypes","Set","map","item","projecttype","setProjecttype","types","settypes","filterprojects","console","log","Types","index","Menu","filter","project","_id"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport '../../App.css';\r\nimport '../project.css';\r\n// import projects from './data';\r\n\r\n\r\nexport default function Projects() {\r\n\r\n\r\n\r\n  const [projects, setProjects] = useState([\r\n    {\r\n      title: \"\",\r\n      type: \"\",\r\n      imageUrl: \"\",\r\n      description: \"\",\r\n      longDescription: \"\",\r\n      userId: \"\",\r\n      sanitizedHtml: \"\",\r\n    },\r\n  ]);\r\n  \r\n\r\n\r\n\r\n  useEffect(() => {\r\n    fetch(\"https://amc-iitbhu.herokuapp.com/projects\")\r\n      .then((res) => {\r\n        if (res.ok) {\r\n          return res.json();\r\n        }\r\n      })\r\n      .then((jsonRes) => setProjects(jsonRes));\r\n  },[]);\r\n\r\n\r\nconst alltypes = [ ...new Set(projects.map((item) => item.type))];\r\nconst [projecttype,setProjecttype]=useState(\"swarm\");\r\nconst [types, settypes] = useState(alltypes);\r\n  \r\n  \r\n\r\n  const filterprojects = (type) => {\r\n    setProjecttype(type);\r\n    console.log(alltypes);\r\n  };\r\n   \r\n\r\n    const Types = ({ types, filterprojects }) => {\r\n      // console.log(types);\r\n    return (\r\n      <div className=\"btn-container\">\r\n        {alltypes.map((type,index) => {\r\n          return (\r\n            <button\r\n              key={index}\r\n              type=\"button\"\r\n              onClick={() => filterprojects(type)}\r\n              className={projecttype === type ? \"filter-btn active\" : \"filter-btn inactive\"}\r\n            >\r\n              {type}\r\n            </button>\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  \r\n\r\nconst Menu = ({ projects }) => {\r\n  return (\r\n    <div className=\"project-section-center\">\r\n      {projects.filter(project => project.type === projecttype).map((project) => {\r\n        const {_id,title, imageUrl, description } = project;\r\n        \r\n        return (\r\n          <article className=\"menu-project\">\r\n            <img src={imageUrl} alt={title} className=\"photo\" />\r\n            <div className=\"project-info\">\r\n              <header>\r\n                <h4>{title}</h4>\r\n              </header>\r\n              <p className=\"project-text\">{description}</p>\r\n              <Link to={'/'+_id} id='ExtraBtn'><a className='Extra-btn' >Read more</a></Link>\r\n            </div>\r\n          </article>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"projects-title\">\r\n          <h2>Our Projects</h2>\r\n          <div className=\"project-underline\"></div>\r\n        </div>\r\n      <Types types={types} filterprojects={filterprojects} />\r\n      <Menu projects={projects} />\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}